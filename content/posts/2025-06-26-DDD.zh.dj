# DDD
## 领域行为 

领域行为是指在领域模型中定义的操作或方法，这些操作直接反映了业务需求和领域规则。它们通常与领域对象（如实体和值对象）紧密相关，并且用于实现业务逻辑。

三个目的

- 封装业务逻辑： 将与特定领域对象相关的业务逻辑内聚在该对象内部，而不是分散在服务层或应用层
- 表达业务意图： 方法名应该清晰地反映其业务目的，使用“通用语言”（Ubiquitous Language）。
- 维护对象状态的有效性： 行为的执行应该始终将对象从一个有效状态转换到另一个有效状态。

编写方法论：

1. 识别核心的业务操作，思考某个领域的对象在业务流程中的动词。
2. 将行为作为领域对象的方法。
3. 封装内部状态的变化，而不是直接暴露状态。
4. 处理业务的规则和异常。
5. 触发领域事件，某些行为可能会导致其他领域的关注事件发生。

## 不变性

不变性是指一个领域对象在任何时候都必须满足的业务规则或条件。它们定义了对象在任何给定时刻的有效状态。当一个领域对象被创建或其状态通过行为被修改时，它必须始终保持其不变性。

三个目的：

- 确保业务规则的一致性： 不变性帮助确保领域对象在任何时候都符合业务规则。
- 防止或操作无效对象
- 简化

编写方法论：

1. 识别不变性：思考一个一个领域对象在业务上必须满足哪些条件才能被认为是有效的。
2. 在领域对象的构造函数中或在行为方法中检查不变性，在一个领域对象被创造时，他必须以一个有效的状态开始其生命周期。
3. 在行为方法中检查不变性，确保在执行任何操作之前，对象的状态仍然有效。
4. 使用值对象来封装不变性，值对象通常是不可变的（immutable），这意味着一旦创建，其状态就不能改变。